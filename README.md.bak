# EkÅŸi SÃ¶zlÃ¼k Clone - Next.js (TypeScript)

## 1. Proje TanÄ±mÄ±
Bu proje, **EkÅŸi SÃ¶zlÃ¼k benzeri** bir sÃ¶zlÃ¼k platformudur. KullanÄ±cÄ±lar yeni **entry**'ler ekleyebilir, baÅŸlÄ±klar aÃ§abilir ve yorum yapabilirler. Proje **Next.js, TypeScript, MongoDB ve Tailwind CSS** kullanÄ±larak geliÅŸtirilmiÅŸtir.

---

## 2. Teknoloji YÄ±ÄŸÄ±nÄ±
| Teknoloji | KullanÄ±m AmacÄ± |
|-----------|----------------|
| **Next.js (TypeScript)** | SSR/SSG desteÄŸi ve React tabanlÄ± frontend |
| **MongoDB** | VeritabanÄ± (MongoDB Atlas) |
| **Mongoose** | MongoDB ORM |
| **NextAuth.js** | KullanÄ±cÄ± kimlik doÄŸrulama |
| **Tailwind CSS** | Responsive tasarÄ±m |
| **Zustand** | Global state yÃ¶netimi |
| **Socket.io** | GerÃ§ek zamanlÄ± veri gÃ¼ncellemesi |
| **React-Markdown** | Entry'lerde Markdown desteÄŸi |
| **Axios** | API istekleri |
| **React Query** | Veri yÃ¶netimi ve cache optimizasyonu |

---

## 3. Proje Kurulumu

### **3.1. Projeyi Klonla**
```bash
 git clone https://github.com/kullanici/eksi-sozluk-clone.git
 cd eksi-sozluk-clone
```

### **3.2. TypeScript ve BaÄŸÄ±mlÄ±lÄ±klarÄ± Kur**
```bash
npm install
npm install --save-dev typescript @types/react @types/node @types/express @types/mongoose @types/socket.io-client @typescript-eslint/parser @typescript-eslint/eslint-plugin eslint eslint-config-next
```

### **3.3. TypeScript KonfigÃ¼rasyon DosyasÄ± (`tsconfig.json`)**
```json
{
  "compilerOptions": {
    "target": "es6",
    "module": "commonjs",
    "strict": true,
    "jsx": "preserve",
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true,
    "noImplicitAny": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true,
    "strictPropertyInitialization": true
  }
}
```

### **3.4. TypeScript Hata Kontrolleri ve ESLint KonfigÃ¼rasyonu**
```bash
npx eslint --init
```
`.eslintrc.json` dosyasÄ± iÃ§erisine ÅŸu konfigÃ¼rasyonu ekleyelim:
```json
{
  "extends": ["next/core-web-vitals", "plugin:@typescript-eslint/recommended"],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint"],
  "rules": {
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/explicit-module-boundary-types": "warn"
  }
}
```

### **3.5. .env.local DosyasÄ±nÄ± OluÅŸtur**
```env
MONGO_URI=mongodb+srv://kullanici:parola@cluster.mongodb.net/myDatabase
NEXTAUTH_SECRET=someRandomSecret
```

### **3.6. GeliÅŸtirme OrtamÄ±nÄ± BaÅŸlat**
```bash
npm run dev
```

---

## 4. Performans Optimizasyonu
- **Lazy Loading** ile bileÅŸen ve gÃ¶rseller yÃ¼klemesi optimize edildi.
- **React Query Cache** ile gereksiz API Ã§aÄŸrÄ±larÄ± engellendi.
- **Next.js ISR (Incremental Static Regeneration)** kullanarak sayfa yenilemeleri hÄ±zlandÄ±rÄ±ldÄ±.
- **UseMemo ve UseCallback** hook'larÄ± ile gereksiz render iÅŸlemleri Ã¶nlendi.
- **Tailwind CSS Purge** ile kullanÄ±lmayan stiller kaldÄ±rÄ±ldÄ±.
- **Next.js Image Component** ile gÃ¶rsel optimizasyon saÄŸlandÄ±.

---

## 5. Yeni Ã–zellikler

### **5.1. Entry BeÄŸeni (Like) Sistemi**
- KullanÄ±cÄ±lar entry'leri beÄŸenebilir ve beÄŸenilerini geri alabilir.
- `src/pages/api/likes.ts` dosyasÄ± oluÅŸturuldu.
- `LikeButton.tsx` bileÅŸeni oluÅŸturuldu ve entry'lerde kullanÄ±lacak.

### **5.2. Entry YorumlarÄ±**
- KullanÄ±cÄ±lar entry'lere yorum ekleyebilir, silebilir.
- `Comment.ts` modeli oluÅŸturuldu.
- `CommentSection.tsx` bileÅŸeni oluÅŸturuldu ve entry detay sayfasÄ±nda yer alacak.

### **5.3. Entry SÄ±ralama (En PopÃ¼ler & En Yeni)**
- `rankings.ts` API route'u ile entry'leri beÄŸeni sayÄ±sÄ±na ve tarihe gÃ¶re sÄ±ralayabiliriz.
- Anasayfa'da sÄ±ralama seÃ§eneÄŸi eklendi.

### **5.4. GerÃ§ek ZamanlÄ± GÃ¼ncellemeler (Socket.io)**
- KullanÄ±cÄ±lar yeni entry eklendiÄŸinde **anÄ±nda gÃ¶rebilecek**.
- **Entry beÄŸenileri ve yorumlarÄ±** anlÄ±k olarak gÃ¼ncellenecek.
- **GerÃ§ek zamanlÄ± bildirimler** ile kullanÄ±cÄ±lar yeni entryâ€™lerden haberdar olacak.
- `socket.io` **server ve client baÄŸlantÄ±larÄ±** tamamlandÄ±.
- `src/pages/api/socket.ts` oluÅŸturuldu.
- `src/lib/socketClient.ts` ile **frontend tarafÄ±nda WebSocket** baÄŸlantÄ±sÄ± saÄŸlandÄ±.

---

## 6. Sonraki AdÄ±mlar
âœ… KullanÄ±cÄ± giriÅŸ/kayÄ±t sistemi eklendi (NextAuth.js)
âœ… Entry ekleme/silme/dÃ¼zenleme iÅŸlemleri tamamlandÄ±
âœ… BeÄŸeni sistemi eklendi (Like) 
âœ… Yorum sistemi eklendi (Comment)
âœ… Entry sÄ±ralama (popÃ¼ler/yeni) Ã¶zelliÄŸi eklendi
âœ… Markdown desteÄŸi eklendi (`react-markdown`)
âœ… **GerÃ§ek zamanlÄ± gÃ¼ncellemeler (Socket.io) tamamlandÄ±**
âœ… SEO optimizasyonu (`next-seo`)
âœ… **TypeScript tÃ¼m projeye entegre edildi**
âœ… **TypeScript hata kontrolleri ve ESLint eklendi**
âœ… **Performans optimizasyonlarÄ± tamamlandÄ±**

**Bu dokÃ¼man projeyi baÅŸlatmak ve anlamak iÃ§in rehber niteliÄŸindedir. Ekstra isteklerin varsa sÃ¶yleyebilirsin! ğŸ˜Š**

